version: '3.8'

services:
  postgres-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: capstoneDB_v2
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5430:5432"
    networks:
      - my_network


  pg-admin:
    image: dpage/pgadmin4:6

    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@dev.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - "5050:5050"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - my_network

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.2
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data
    command: [ "start-dev" ]
    networks:
      - my_network

  registry:
#    image: registry:latest
    build:
      context: ./registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
     - my_network

  member-service:
#    image: member-service:latest
    build:
      context: ./member-service
      dockerfile: Dockerfile
    ports:
      - "8092:8092"
    networks:
      - my_network


  book-service:
#    image: book-service:latest
    build:
      context: ./book-service
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    networks:
      - my_network



  bag-service:
#    image: bag-service:latest
    build:
      context: ./bag-service
      dockerfile: Dockerfile
    ports:
      - "8093:8093"
    networks:
      - my_network



  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - my_network

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8222:8222"
    networks:
      - my_network

volumes:
  pg_data:
  redis_data:
  keycloak_data:

networks:
  my_network:
    driver: bridge